The string "PAYPALISHIRING" is written in a zigzag pattern on a given number of rows like this: (you may want to display this pattern in a fixed font for better legibility)

P   A   H   N
A P L S I I G
Y   I   R
And then read line by line: "PAHNAPLSIIGYIR"
Write the code that will take a string and make this conversion given a number of rows:

string convert(string text, int nRows);
convert("PAYPALISHIRING", 3) should return "PAHNAPLSIIGYIR".
我的代码：
class Solution {
    public String convert(String str, int numRows) {
        if(numRows==1||numRows==0) return str;
        int len=str.length();
        char result[]=new char[len];
        int num=0;
        for(int i=0;i<numRows;i++){
            int j=i;
            while(j<len){
                result[num++]=str.charAt(j);
                if(i>0&&i<numRows-1){//当不是第一行和最后一行的时候，要多插入一个数（一对一对的插入）
                    if(j+2*numRows-2-2*i<len)
                        result[num++]=str.charAt(j+2*numRows-2-2*i);
                    else
                        break;
                }
                j+=2*numRows-2;
            }
        }
        return String.valueOf(result);
    }
}
讨论版：
public String convert(String s, int nRows) {
    char[] c = s.toCharArray();
    int len = c.length;
    StringBuffer[] sb = new StringBuffer[nRows];
    for (int i = 0; i < sb.length; i++) sb[i] = new StringBuffer();//创建nRows行StringBuffer
    
    int i = 0;
    while (i < len) {
        for (int idx = 0; idx < nRows && i < len; idx++) // 垂直向下添加
            sb[idx].append(c[i++]);
        for (int idx = nRows-2; idx >= 1 && i < len; idx--) // 斜边向上添加，idx = nRows-2和idx >= 1除去第一行和最后一行
            sb[idx].append(c[i++]);
    }
    for (int idx = 1; idx < sb.length; idx++)
        sb[0].append(sb[idx]);//添加在第一行后面
    return sb[0].toString();
}
