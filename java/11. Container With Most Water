Given n non-negative integers a1, a2, ..., an, where each represents a point at coordinate (i, ai). 
n vertical lines are drawn such that the two endpoints of line i is at (i, ai) and (i, 0). 
Find two lines, which together with x-axis forms a container, such that the container contains the most water.

Note: You may not slant the container and n is at least 2.
我的代码（Time Limit Exceeded）：
class Solution {
    public int maxArea(int[] height) {
        int max=0;
        for(int i=0;i<height.length-1;i++)
            for(int j=i+1;j<height.length;j++){
                int area=Math.min(height[i],height[j])*(j-i);
                if(area>max) max=area;
            }
        return max;
    }
}

Solution：
class Solution {
    public int maxArea(int[] height) {
        int max=0;
        int pre=0,last=height.length-1;
        while(pre<last){
            max=Math.max(max,Math.min(height[pre],height[last])*(last-pre));
            if(height[pre]>height[last]) last--;//还可以加一个判断，判断前一个数据的大小，若比先前的数值小则直接跳过
            else pre++;
        }
        return max;
    }
}
